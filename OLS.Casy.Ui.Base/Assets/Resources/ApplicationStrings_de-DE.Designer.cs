//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OLS.Casy.Ui.Base.Assets.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ApplicationStrings_de_DE {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ApplicationStrings_de_DE() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OLS.Casy.Ui.Base.Assets.Resources.ApplicationStrings_de-DE", typeof(ApplicationStrings_de_DE).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wert der Elternergebnisse ähnelt.
        /// </summary>
        internal static string AggregationCalculationMode_FromParent_Name {
            get {
                return ResourceManager.GetString("AggregationCalculationMode_FromParent_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manuell ähnelt.
        /// </summary>
        internal static string AggregationCalculationMode_Manual_Name {
            get {
                return ResourceManager.GetString("AggregationCalculationMode_Manual_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aus ähnelt.
        /// </summary>
        internal static string AggregationCalculationMode_Off_Name {
            get {
                return ResourceManager.GetString("AggregationCalculationMode_Off_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ein ähnelt.
        /// </summary>
        internal static string AggregationCalculationMode_On_Name {
            get {
                return ResourceManager.GetString("AggregationCalculationMode_On_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ergebnis: ähnelt.
        /// </summary>
        internal static string BackgroundResultWizardStepView_Results_Header {
            get {
                return ResourceManager.GetString("BackgroundResultWizardStepView_Results_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl /ml: ähnelt.
        /// </summary>
        internal static string BackgroundResultWizardStepView_Results_TotalCounts {
            get {
                return ResourceManager.GetString("BackgroundResultWizardStepView_Results_TotalCounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tote Zellen ähnelt.
        /// </summary>
        internal static string Cursor_DeadCells_Name {
            get {
                return ResourceManager.GetString("Cursor_DeadCells_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debris ähnelt.
        /// </summary>
        internal static string Cursor_Debris_Name {
            get {
                return ResourceManager.GetString("Cursor_Debris_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Viable Zellen ähnelt.
        /// </summary>
        internal static string Cursor_VitalCells_Name {
            get {
                return ResourceManager.GetString("Cursor_VitalCells_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Volumen CASYton (ml) ähnelt.
        /// </summary>
        internal static string DilutionFactor_CASYtonVolume {
            get {
                return ResourceManager.GetString("DilutionFactor_CASYtonVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Faktor ähnelt.
        /// </summary>
        internal static string DilutionFactor_Factor {
            get {
                return ResourceManager.GetString("DilutionFactor_Factor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Volumen Probe (µl) ähnelt.
        /// </summary>
        internal static string DilutionFactor_SampleVolume {
            get {
                return ResourceManager.GetString("DilutionFactor_SampleVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eine Vorlage mit dem selben Namen existiert bereits. ähnelt.
        /// </summary>
        internal static string EditTemplateView_SetupAlreadyExists_Content {
            get {
                return ResourceManager.GetString("EditTemplateView_SetupAlreadyExists_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ungültiger Name ähnelt.
        /// </summary>
        internal static string EditTemplateView_SetupAlreadyExists_Title {
            get {
                return ResourceManager.GetString("EditTemplateView_SetupAlreadyExists_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Geben Sie einen Wert ein ähnelt.
        /// </summary>
        internal static string InputDialog_Watermark {
            get {
                return ResourceManager.GetString("InputDialog_Watermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Freie Bereiche ähnelt.
        /// </summary>
        internal static string MeasureMode_MultipleCursor_Name {
            get {
                return ResourceManager.GetString("MeasureMode_MultipleCursor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Viabilität ähnelt.
        /// </summary>
        internal static string MeasureMode_Viability_Name {
            get {
                return ResourceManager.GetString("MeasureMode_Viability_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AUSWAHL: ähnelt.
        /// </summary>
        internal static string MeasureResultTreeView_Button_ChoosenElemtns {
            get {
                return ResourceManager.GetString("MeasureResultTreeView_Button_ChoosenElemtns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abbrechen ähnelt.
        /// </summary>
        internal static string ProgressDialog_Button_Cancel {
            get {
                return ResourceManager.GetString("ProgressDialog_Button_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aggregationsfaktor ähnelt.
        /// </summary>
        internal static string ResultItemType_AggregationFactor_Name {
            get {
                return ResourceManager.GetString("ResultItemType_AggregationFactor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Konzentration ähnelt.
        /// </summary>
        internal static string ResultItemType_Concentration_Name {
            get {
                return ResourceManager.GetString("ResultItemType_Concentration_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl ähnelt.
        /// </summary>
        internal static string ResultItemType_Counts_Name {
            get {
                return ResourceManager.GetString("ResultItemType_Counts_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl / ml &gt; {0} µm ähnelt.
        /// </summary>
        internal static string ResultItemType_CountsAboveDiameter_Name {
            get {
                return ResourceManager.GetString("ResultItemType_CountsAboveDiameter_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % Anzahl ähnelt.
        /// </summary>
        internal static string ResultItemType_CountsPercentage_Name {
            get {
                return ResourceManager.GetString("ResultItemType_CountsPercentage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl / ml ähnelt.
        /// </summary>
        internal static string ResultItemType_CountsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_CountsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debri / ml ähnelt.
        /// </summary>
        internal static string ResultItemType_DebrisCount_Name {
            get {
                return ResourceManager.GetString("ResultItemType_DebrisCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abweichung ähnelt.
        /// </summary>
        internal static string ResultItemType_Deviation_Name {
            get {
                return ResourceManager.GetString("ResultItemType_Deviation_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mittlerer Durchmesser ähnelt.
        /// </summary>
        internal static string ResultItemType_MeanDiameter_Name {
            get {
                return ResourceManager.GetString("ResultItemType_MeanDiameter_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mittleres Volumen ähnelt.
        /// </summary>
        internal static string ResultItemType_MeanVolume_Name {
            get {
                return ResourceManager.GetString("ResultItemType_MeanVolume_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Peak Durchmesser ähnelt.
        /// </summary>
        internal static string ResultItemType_PeakDiameter_Name {
            get {
                return ResourceManager.GetString("ResultItemType_PeakDiameter_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Peak Volumen ähnelt.
        /// </summary>
        internal static string ResultItemType_PeakVolume_Name {
            get {
                return ResourceManager.GetString("ResultItemType_PeakVolume_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl / ml (A) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationACountsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationACountsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % Anzahl (A) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationAPercentage_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationAPercentage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl / ml (B) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationBCountsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationBCountsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % Anzahl (B) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationBPercentage_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationBPercentage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl / ml (C) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationCCountsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationCCountsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % Anzahl (C) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationCPercentage_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationCPercentage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl / ml (D) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationDCountsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationDCountsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % Anzahl (D) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationDPercentage_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationDPercentage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl / ml (E) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationECountsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationECountsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % Anzahl (E) ähnelt.
        /// </summary>
        internal static string ResultItemType_SubpopulationEPercentage_Name {
            get {
                return ResourceManager.GetString("ResultItemType_SubpopulationEPercentage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gesamtzellen / ml ähnelt.
        /// </summary>
        internal static string ResultItemType_TotalCountsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_TotalCountsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % Viabilität ähnelt.
        /// </summary>
        internal static string ResultItemType_Viability_Name {
            get {
                return ResourceManager.GetString("ResultItemType_Viability_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lebendzellzahl / ml ähnelt.
        /// </summary>
        internal static string ResultItemType_ViableCellsPerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_ViableCellsPerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Volumen / ml ähnelt.
        /// </summary>
        internal static string ResultItemType_VolumePerMl_Name {
            get {
                return ResourceManager.GetString("ResultItemType_VolumePerMl_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto - Wertebereich ähnelt.
        /// </summary>
        internal static string ScalingMode_Auto_Name {
            get {
                return ResourceManager.GetString("ScalingMode_Auto_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fester Wertebereich ähnelt.
        /// </summary>
        internal static string ScalingMode_MaxRange_Name {
            get {
                return ResourceManager.GetString("ScalingMode_MaxRange_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die KAPILLARE AUSWÄHLEN ähnelt.
        /// </summary>
        internal static string SelectCapillaryWizardStepView_ComboBox_Capillary_Watermark {
            get {
                return ResourceManager.GetString("SelectCapillaryWizardStepView_ComboBox_Capillary_Watermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unterschiedliche Einstellungen der Bereiche gefunden ähnelt.
        /// </summary>
        internal static string SelectRangeParentDialog_Header {
            get {
                return ResourceManager.GetString("SelectRangeParentDialog_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bitte wählen Sie das Messergebnis aus, dessen Einstellungen der Bereiche für das Overlay übernommen werden sollen ähnelt.
        /// </summary>
        internal static string SelectRangeParentDialog_Text {
            get {
                return ResourceManager.GetString("SelectRangeParentDialog_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verbleibende Zeit: ähnelt.
        /// </summary>
        internal static string TimerWizzardStepView_TimeLeft {
            get {
                return ResourceManager.GetString("TimerWizzardStepView_TimeLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl ähnelt.
        /// </summary>
        internal static string UnitMode_Label_Counts {
            get {
                return ResourceManager.GetString("UnitMode_Label_Counts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Volumen ähnelt.
        /// </summary>
        internal static string UnitMode_Label_Volume {
            get {
                return ResourceManager.GetString("UnitMode_Label_Volume", resourceCulture);
            }
        }
    }
}
