<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:localization="clr-namespace:OLS.Casy.Ui.Base.Localization;assembly=OLS.Casy.Ui.Base"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:Dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                    xmlns:basecontrols="clr-namespace:OLS.Casy.Ui.Base.Controls;assembly=OLS.Casy.Ui.Base"
                    xmlns:base="clr-namespace:OLS.Casy.Ui.Base;assembly=OLS.Casy.Ui.Base"
                    xmlns:auth="clr-namespace:OLS.Casy.Ui.Base.Authorization;assembly=OLS.Casy.Ui.Base"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">
    
    <ImageBrush x:Key="Background" ImageSource="pack://application:,,,/OLS.Casy.Ui;component/Assets/Icons/Background.jpg" Stretch="Fill" options:Freeze="true"/>
    <ImageBrush x:Key="CasyImage" ImageSource="pack://application:,,,/OLS.Casy.Ui;component/Assets/Icons/Casy.png" Stretch="Uniform" options:Freeze="true"/>

    <Color x:Key="DialogOuterBackgroundColor">#88000000</Color>
    <Color x:Key="DialogBackgroundColor">#AA000000</Color>
    <Color x:Key="DialogBorderColor">#FFE6E6E6</Color>
    <Color x:Key="DialogForegroundColor">#FFFFFFFF</Color>

    <Color x:Key="LoginDialogBackgroundColor">#88000000</Color>
    <Color x:Key="LoginDialogBorderColor">#FFE6E6E6</Color>
    <Color x:Key="OmniTextBoxBackgroundColor">#88000000</Color>
    <Color x:Key="OmniTextBoxForegroundColor">#FFE6E6E6</Color>
    <Color x:Key="ButtonForegroundColor">#FFFFFFFF</Color>
    <Color x:Key="GreenButtonBackgroundColor">#FF95C11F</Color>
    <Color x:Key="GrayButtonBackgroundColor">#FF999999</Color>
    <Color x:Key="OrangeColor">#FFEE7F00</Color>
    <Color x:Key="OrangeTransparentColor">#CCEE7F00</Color>
    <Color x:Key="RedTransparentColor">#88FF0000</Color>
    <Color x:Key="TopPanelBackgroundColor">#FF595959</Color>
    <Color x:Key="MenuPanelBackgroundColor">#AA000000</Color>
    <Color x:Key="MenuItemPressedColor">#FF2E2C2D</Color>
    <Color x:Key="MenuItemForegroundColor">#FF706E6F</Color>
    <Color x:Key="NotificationBackgroundColor">#FF999999</Color>
    <Color x:Key="BlueColor">#FF079FE0</Color>

    <Color x:Key="ShortcutButtonBackgroundColor">#FFE6E6E6</Color>
    <Color x:Key="ShortcutButtonForegroundColor">#FF5E5E5E</Color>

    <Color x:Key="FavTemplateButtonBackgroundColor">#FFF5F5F5</Color>
    <Color x:Key="FavTemplateButtonForegroundColor">#FF5E5E5E</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>

    <SolidColorBrush x:Key="ChartColor1" Color="#FFFF2F34"/>
    <SolidColorBrush x:Key="ChartColor2" Color="#FFFF7323"/>
    <SolidColorBrush x:Key="ChartColor3" Color="#FFFEA733"/>
    <SolidColorBrush x:Key="ChartColor4" Color="#FFDDDE3A"/>
    <SolidColorBrush x:Key="ChartColor5" Color="#FF85C33C"/>
    <SolidColorBrush x:Key="ChartColor6" Color="#FF5AB88F"/>
    <SolidColorBrush x:Key="ChartColor7" Color="#FF494495"/>
    <SolidColorBrush x:Key="ChartColor8" Color="#FFFA3495"/>
    <SolidColorBrush x:Key="ChartColor9" Color="#FFFF2F34"/>
    <SolidColorBrush x:Key="ChartColor10" Color="#FFFF7323"/>
    
    <SolidColorBrush x:Key="StripBorderColor1" Color="#FFB21B1C"/>
    <SolidColorBrush x:Key="StripBrushColor1" Color="#66B21B1C"/>
    <SolidColorBrush x:Key="StripBorderColor2" Color="#FF1CB269"/>
    <SolidColorBrush x:Key="StripBrushColor2" Color="#661CB269"/>
    <SolidColorBrush x:Key="StripBorderColor3" Color="#FF98B21C"/>
    <SolidColorBrush x:Key="StripBrushColor3" Color="#6698B21C"/>
    <SolidColorBrush x:Key="StripBorderColor4" Color="#FF4BACC6"/>
    <SolidColorBrush x:Key="StripBrushColor4" Color="#664BACC6"/>
    <SolidColorBrush x:Key="StripBorderColor5" Color="#FFC21CCC"/>
    <SolidColorBrush x:Key="StripBrushColor5" Color="#66C21CCC"/>
    <SolidColorBrush x:Key="StripBorderColor6" Color="#FFB21B1C"/>
    <SolidColorBrush x:Key="StripBrushColor6" Color="#66B21B1C"/>
    <SolidColorBrush x:Key="StripBorderColor7" Color="#FF1CB269"/>
    <SolidColorBrush x:Key="StripBrushColor7" Color="#661CB269"/>
    <SolidColorBrush x:Key="StripBorderColor8" Color="#FF98B21C"/>
    <SolidColorBrush x:Key="StripBrushColor8" Color="#6698B21C"/>
    <SolidColorBrush x:Key="StripBorderColor9" Color="#FF4BACC6"/>
    <SolidColorBrush x:Key="StripBrushColor9" Color="#664BACC6"/>
    <SolidColorBrush x:Key="StripBorderColor10" Color="#FFC21CCC"/>
    <SolidColorBrush x:Key="StripBrushColor10" Color="#66C21CCC"/>

    <SolidColorBrush x:Key="DialogOuterBackgroundBrush" Color="{StaticResource DialogOuterBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="DialogBackgroundBrush" Color="{StaticResource DialogBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="DialogBorderBrush" Color="{StaticResource DialogBorderColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="DialogForegroundBrush" Color="{StaticResource DialogForegroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="LoginDialogBackgroundBrush" Color="{StaticResource LoginDialogBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="LoginDialogBorderBrush" Color="{StaticResource LoginDialogBorderColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="OmniTextBoxBackgroundBrush" Color="{StaticResource OmniTextBoxBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="OmniTextBoxForegroundBrush" Color="{StaticResource OmniTextBoxForegroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="ButtonForegroundBrush" Color="{StaticResource ButtonForegroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="GreenButtonBackgroundBrush" Color="{StaticResource GreenButtonBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="GrayButtonBackgroundBrush" Color="{StaticResource GrayButtonBackgroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="OrangeBrush" Color="{StaticResource OrangeColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="OrangeTransparentBrush" Color="{StaticResource OrangeTransparentColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="RedTransparentBrush" Color="{StaticResource RedTransparentColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="BlueBrush" Color="{StaticResource BlueColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="TopPanelBackgroundBrush" Color="{StaticResource TopPanelBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MenuPanelBackgroundBrush" Color="{StaticResource MenuPanelBackgroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="MenuItemPressedBrush" Color="{StaticResource MenuItemPressedColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="MenuItemForegroundBrush" Color="{StaticResource MenuItemForegroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="NotificationBackgroundBrush" Color="{StaticResource NotificationBackgroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="ShortcutButtonBackgroundBrush" Color="{StaticResource ShortcutButtonBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="ShortcutButtonForegroundBrush" Color="{StaticResource ShortcutButtonForegroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="FavTemplateButtonBackgroundBrush" Color="{StaticResource FavTemplateButtonBackgroundColor}" options:Freeze="True" />
    <SolidColorBrush x:Key="FavTemplateButtonForegroundBrush" Color="{StaticResource FavTemplateButtonForegroundColor}" options:Freeze="True" />

    <SolidColorBrush x:Key="CommandLineColorBlue" Color="Black" />
    <SolidColorBrush x:Key="CommandLineColorGreen" Color="DarkGreen" />
    <SolidColorBrush x:Key="CommandLineColorRed" Color="Red" />
    <SolidColorBrush x:Key="CommandLineColorYellow" Color="Yellow" />

    <Style TargetType="Label" x:Key="CasyLabelStyle">
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
    </Style>

    <Style TargetType="TextBlock" x:Key="CasyTextBlockStyle">
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
    </Style>

    <ControlTemplate x:Key="OmniTextBoxErrorTemplate">
        <Grid>
            <Border x:Name="GlowErrorBorder" BorderBrush="Red" Margin="-2" BorderThickness="2">
                <AdornedElementPlaceholder />
            </Border>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type DatePicker}" x:Key="CasyDatePickerStyle">
        <Setter Property="Background" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="MinHeight" Value="43" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="BorderBrush" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type basecontrols:OmniTextBox}" x:Key="CasyOmniTextBoxStyle">
        <Setter Property="Background" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="MinHeight" Value="43" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="BorderBrush" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="CaretBrush" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource OmniTextBoxErrorTemplate}" />
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <DataTemplate>
                            <Label Content="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" localization:Localization.IsLocalized="True" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="WatermarkTextBlock">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <!--<Setter Property="MinHeight" Value="30" />-->
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Margin" Value="8,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
    </Style>

    <Style x:Key="DefaultPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="MinHeight" Value="46" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="BorderBrush" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,2,0,2" />
        <Setter Property="CaretBrush" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
    </Style>

    <Style x:Key="GreenButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource GreenButtonBackgroundBrush}" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
    </Style>

    <Style x:Key="GrayButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource GrayButtonBackgroundBrush}" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
    </Style>

    <Style x:Key="TransparentButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="Background"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <!--<Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />-->
                        <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        -->
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <!--
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShortcutButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="{StaticResource ShortcutButtonForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ShortcutButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="Background"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        </Trigger>
                        -->

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource OrangeBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FavTemplateButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="{StaticResource FavTemplateButtonForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource FavTemplateButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="Background"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        </Trigger>
                        -->

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource OrangeBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type basecontrols:OmniMenuButton}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="BorderBrush" Value="#FF5A5A5A" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Root" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" MinHeight="43">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <iconPacks:PackIconFontAwesome x:Name="ChevronIcon"  Grid.Column="2" Width="8" Height="8" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="0,0,12,0" Visibility="Visible" Kind="ChevronRightSolid" />

                                <iconPacks:PackIconFontAwesome Width="16" Height="16" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="15,0,10,0" Kind="{Binding Path=AwesomeGlyph}" Visibility="{Binding Path=Glyph, Converter={StaticResource IsNullVisibilityConverter}}" />
                                <Rectangle Width="16" Height="16" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="15,0,10,0" Visibility="{Binding Path=AwesomeGlyph, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=None}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{Binding Path=Glyph, Converter={StaticResource StaticResourceConverter}, RelativeSource={RelativeSource AncestorType={x:Type basecontrols:OmniMenuButton}}}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>

                                <ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <Border x:Name="selectedIndicator" Background="{StaticResource OrangeBrush}" Visibility="Collapsed" Grid.Column="1" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelectedState}" Value="True">
                            <Setter TargetName="selectedIndicator" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Root" Property="Background" Value="{StaticResource MenuItemPressedBrush}" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=ChevronState}" Value="{x:Static base:ChevronState.Hide}">
                            <Setter TargetName="ChevronIcon" Property="Kind" Value="None" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ChevronState}" Value="{x:Static base:ChevronState.Down}">
                            <Setter TargetName="ChevronIcon" Property="Kind" Value="ChevronDownSolid" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ChevronState}" Value="{x:Static base:ChevronState.Up}">
                            <Setter TargetName="ChevronIcon" Property="Kind" Value="ChevronUpSolid" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopMenuDropDownMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource OrangeTransparentBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
        <Setter Property="MinWidth" Value="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.ActualWidth}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Uid="Border_93">
                        <!--
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="0,0,5,5"/>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        -->
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Uid="Border_50">
                            <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Uid="ScrollViewer_9">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ItemsPresenter_5"/>
                            </ScrollViewer>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopMenuDropDownItemStyle" TargetType="{x:Type MenuItem}">
        <Style.BasedOn>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{StaticResource OrangeTransparentBrush}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="BorderBrush" Value="White" />
                <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid x:Name="Grid" Uid="Grid_49" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <!--<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="14"/>-->
                                    </Grid.ColumnDefinitions>
                                    <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_12" Visibility="Hidden" VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
                                    <!--<TextBlock x:Name="InputGestureText" Grid.Column="2" DockPanel.Dock="Right" Margin="5,2,0,2" Text="{TemplateBinding InputGestureText}" Uid="TextBlock_10"/>-->
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                </Trigger>
                                <DataTrigger Value="False">
                                    <DataTrigger.Binding>
                                        <Binding ElementName="MenuItemIcon" Path="Source"/>
                                    </DataTrigger.Binding>
                                    <Setter Property="VerticalAlignment" TargetName="ContentPresenter" Value="Center"/>
                                </DataTrigger>
                                -->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Margin" Value="0,1"/>
                        <Setter Property="Padding" Value="6,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_39">
                                        <DockPanel x:Name="DockPanel" Uid="DockPanel_4">
                                            <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_13" Visibility="Collapsed" VerticalAlignment="Center"/>
                                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_35"/>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Margin" Value="0,1"/>
                        <Setter Property="Padding" Value="6,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_41">
                                        <DockPanel x:Name="DockPanel" Uid="DockPanel_5">
                                            <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_14" Visibility="Collapsed" VerticalAlignment="Center"/>
                                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_37"/>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                        <Setter Property="Padding" Value="0,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_42">
                                        <Grid x:Name="Grid" Uid="Grid_50">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="5" SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                                <ColumnDefinition Width="14"/>
                                            </Grid.ColumnDefinitions>
                                            <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_15" Visibility="Hidden" VerticalAlignment="Center"/>
                                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_39"/>
                                            <Path x:Name="Path" Grid.Column="3" DockPanel.Dock="Right" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" Margin="4,0,6,0" Uid="Path_16" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                        <Setter Property="Padding" Value="0,2"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource ListItemHighlightForegroundBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource ListItemHighlightBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource ListItemHighlightBorderBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource ListItemDisabledForegroundBrush}"/>
                    </Trigger>
                </Style.Triggers>
                -->
            </Style>
        </Style.BasedOn>
    </Style>

    <Style TargetType="{x:Type Dialogs:BaseMetroDialog}"
        x:Key="CasyDialogStyle"
        BasedOn="{StaticResource {x:Type Dialogs:BaseMetroDialog}}">

        <Setter Property="Background" Value="{DynamicResource DialogBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource DialogForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DialogBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!--<Setter Property="Margin" Value="0,80,0,0" />-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Dialogs:BaseMetroDialog}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="DialogShownStoryboard">
                            <DoubleAnimation AccelerationRatio=".9"
                                            BeginTime="0:0:0"
                                            Duration="0:0:0.2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <!--
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="80*" />
                            <ColumnDefinition Width="10*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*" />
                            <RowDefinition Height="80*" />
                            <RowDefinition Height="10*" />
                        </Grid.RowDefinitions>
                        -->

                        <Border FocusVisualStyle="{x:Null}"
                            Focusable="False" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="1"
                                Padding="24" CornerRadius="12" Background="{DynamicResource DialogBackgroundBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Grid x:Name="outerDiaGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ContentPresenter Content="{TemplateBinding DialogTop}" Grid.ColumnSpan="2" />

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10*" />
                                        <ColumnDefinition Width="80*" />
                                        <ColumnDefinition Width="10*" />
                                    </Grid.ColumnDefinitions>
                                    <!--  Content area  -->
                                    <Grid Grid.Column="1"
                                        Margin="0 10 0 0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0">
                                            <TextBlock FontSize="26"
                                                       FontWeight="Regular"
                                                       Foreground="{StaticResource DialogForegroundBrush}"
                                                       Text="{TemplateBinding Title}"
                                                       TextWrapping="Wrap" />
                                        
                                            <Button Width="30"
                                                    Height="30"
                                                    Command="{Binding Path=CancelCommand}"
                                                    HorizontalAlignment="Right"
                                                    Background="Transparent"
                                                    Margin="0,10,10,0"
                                                    BorderThickness="0"
                                                    Visibility="{Binding Path=ShowCloseButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    IsCancel="True">
                                                <iconPacks:PackIconFontAwesome Width="14" Height="14" Foreground="White" Kind="TimesSolid" />
                                            </Button>
                                        </Grid>
                                        
                                        <ContentPresenter Grid.Row="1"
                                                        Content="{TemplateBinding Content}" />
                                    </Grid>
                                </Grid>
                                <ContentPresenter Grid.Row="2"
                                                Content="{TemplateBinding DialogBottom}" />
                                <!--Foreground="{Binding ProgressBarForeground, RelativeSource={RelativeSource AncestorType=Dialogs:BaseMetroDialog, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"-->
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OmniToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroFlatToggleButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource GrayBrush2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type basecontrols:MoveThumb}">
        <Rectangle Fill="Transparent"/>
    </ControlTemplate>

    <Style TargetType="{x:Type Controls:NumericUpDown}">
        <Setter Property="Speedup" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:NumericUpDown}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="Base"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="PART_NumericUpColumn" Width="Auto" />
                                <ColumnDefinition x:Name="PART_TextBoxColumn" Width="*" />
                                <ColumnDefinition x:Name="PART_NumericDownColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <basecontrols:OmniTextBox x:Name="PART_TextBox"
                                     Grid.Column="1"
                                     MinWidth="20"
                                     Margin="0 0 -2 0"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     Padding="5"
                                     Controls:ControlsHelper.DisabledVisualElementVisibility="Collapsed"
                                     Controls:TextBoxHelper.ButtonContent="{TemplateBinding Controls:TextBoxHelper.ButtonContent}"
                                     Controls:TextBoxHelper.ButtonContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}"
                                     Controls:TextBoxHelper.ButtonFontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}"
                                     Controls:TextBoxHelper.ButtonFontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}"
                                     Controls:TextBoxHelper.ButtonWidth="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}"
                                     Controls:TextBoxHelper.ButtonsAlignment="{TemplateBinding ButtonsAlignment}"
                                     Controls:TextBoxHelper.ClearTextButton="{TemplateBinding Controls:TextBoxHelper.ClearTextButton}"
                                     Controls:TextBoxHelper.HasText="{TemplateBinding Controls:TextBoxHelper.HasText}"
                                     Controls:TextBoxHelper.SelectAllOnFocus="{TemplateBinding Controls:TextBoxHelper.SelectAllOnFocus}"
                                     Controls:TextBoxHelper.UseFloatingWatermark="{TemplateBinding Controls:TextBoxHelper.UseFloatingWatermark}"
                                     Controls:TextBoxHelper.Watermark="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                     Background="White"
                                     FocusVisualStyle="{x:Null}"
                                     Focusable="{TemplateBinding Focusable}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     Foreground="{TemplateBinding Foreground}"
                                     HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     IsTabStop="{TemplateBinding IsTabStop}"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                     TabIndex="{TemplateBinding TabIndex}"
                                     VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" 
                                     BorderThickness="0"/>
                            <RepeatButton x:Name="PART_NumericUp"
                                          Grid.Column="2"
                                          Width="{TemplateBinding UpDownButtonsWidth}"
                                          Margin="0 2 0 2"
                                          Delay="{TemplateBinding Delay}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsTabStop="False"
                                          Focusable="False"
                                          Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                          Stylus.IsPressAndHoldEnabled="False">
                                <Path x:Name="PolygonUp"
                                      Width="14"
                                      Height="14"
                                      Data="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z "
                                      Fill="{DynamicResource MahApps.Brushes.Gray1}"
                                      Stretch="Fill" />
                            </RepeatButton>
                            <RepeatButton x:Name="PART_NumericDown"
                                          Grid.Column="0"
                                          Width="{TemplateBinding UpDownButtonsWidth}"
                                          Margin="0 2 2 2"
                                          VerticalContentAlignment="Center"
                                          Delay="{TemplateBinding Delay}"
                                          Focusable="False"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsTabStop="False"
                                          Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                          Stylus.IsPressAndHoldEnabled="False">
                                <Path x:Name="PolygonDown"
                                      Width="14"
                                      Height="3"
                                      Data="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z "
                                      Fill="{DynamicResource MahApps.Brushes.Gray1}"
                                      Stretch="Fill" />
                            </RepeatButton>
                        </Grid>

                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonsAlignment" Value="Left">
                            <Setter TargetName="PART_NumericDown" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_NumericDown" Property="Margin" Value="0 2 0 2" />
                            <Setter TargetName="PART_NumericDownColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_NumericUp" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_NumericUp" Property="Margin" Value="2 2 0 2" />
                            <Setter TargetName="PART_NumericUpColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="2" />
                            <Setter TargetName="PART_TextBox" Property="Margin" Value="-2 0 0 0" />
                            <Setter TargetName="PART_TextBoxColumn" Property="Width" Value="Auto" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="InterceptArrowKeys" Value="False" />
                            <Setter Property="InterceptManualEnter" Value="False" />
                            <Setter Property="InterceptMouseWheel" Value="False" />
                            <Setter TargetName="PART_NumericDown" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_NumericUp" Property="IsEnabled" Value="False" />
                        </Trigger>

                        <Trigger SourceName="PART_NumericUp" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_NumericUp" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PolygonUp" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>

                        <Trigger SourceName="PART_NumericUp" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_NumericUp" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PolygonUp" Property="Fill" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>

                        <Trigger SourceName="PART_NumericDown" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_NumericDown" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PolygonDown" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>

                        <Trigger SourceName="PART_NumericDown" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_NumericDown" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PolygonDown" Property="Fill" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>

                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>

                        <Trigger Property="HideUpDownButtons" Value="True">
                            <Setter TargetName="PART_NumericDown" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_NumericDownColumn" Property="Width" Value="0" />
                            <Setter TargetName="PART_NumericUp" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_NumericUpColumn" Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="CasyComboBoxStyle" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="MinHeight" Value="43" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="#00000000"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="#00000000"/>
                    <Setter Property="BorderBrush" Value="#00000000"/>
                    <Setter Property="Foreground" Value="#FF1B1B1B"/>
                    <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>-->
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="3,2"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinHeight" Value="43" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" MinHeight="{TemplateBinding MinHeight}">
                                    <Border x:Name="Selection" Background="{StaticResource OrangeBrush}" Opacity="0"/>
                                    <ContentPresenter x:Name="contentPresenter" 
                                                      ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" TargetName="Selection" Value="0.5"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Opacity" TargetName="Selection" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" TargetName="Selection" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.35"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0" Placement="Bottom">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                        <basecontrols:OmniTextBox x:Name="PART_EditableTextBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Text="{TemplateBinding SelectionBoxItem}" >
                            <basecontrols:OmniTextBox.Style>
                                <Style TargetType="{x:Type basecontrols:OmniTextBox}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush" Value="#7F5C5C5C"/>
                                    <Setter Property="SelectionBrush" Value="#FF0072C6"/>
                                    <Setter Property="CaretBrush" Value="{StaticResource OmniTextBoxForegroundBrush}" />
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="3,2"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type basecontrols:OmniTextBox}">
                                                <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                    <Border x:Name="FocusedState" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsReadOnly" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.75"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </basecontrols:OmniTextBox.Style>
                        </basecontrols:OmniTextBox>
                        <ToggleButton x:Name="DropDownButton" Focusable="False" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Background" Value="#00000000"/>
                                    <Setter Property="BorderBrush" Value="#00000000"/>
                                    <Setter Property="Foreground" Value="#00000000"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid x:Name="Root" Background="#00000000" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                        <Border x:Name="DefaultState" BorderThickness="0" Background="#FF3A3A3A"/>
                                                        <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="ChevronDownSolid" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                        <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid x:Name="FocusedState" Grid.ColumnSpan="2" Opacity="0">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False"/>
                            <Setter Property="IsEnabled" TargetName="DropDownButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="Root" SnapsToDevicePixels="True">
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="1" Placement="Bottom">
                                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                        <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="51*"/>
                                                        <ColumnDefinition Width="464*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.ColumnSpan="2" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <Grid x:Name="OmniTextBox" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Border x:Name="DefaultState" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                    <Border x:Name="FocusedState" Opacity="0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <ContentPresenter x:Name="content" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" 
                                                      IsHitTestVisible="False" 
                                                      Margin="5,3,23,3" 
                                                      VerticalAlignment="Center" 
                                                      />
                                </Grid>
                                <ToggleButton x:Name="DropDownButton" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="#00000000"/>
                                            <Setter Property="BorderBrush" Value="#00000000"/>
                                            <Setter Property="Foreground" Value="#00000000"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid x:Name="Root" Background="#00000000" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                                <Border x:Name="DefaultState" BorderThickness="0" Background="#FF3A3A3A" />
                                                                <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="ChevronDownSolid" />
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                                <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="CasyAutoCompleteBoxStyle" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource OmniTextBoxBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <!--<Setter Property="MinHeight" Value="43" />-->
        <Setter Property="FontSize" Value="24" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Setter Property="IsTextSearchCaseSensitive" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="StaysOpenOnEdit" Value="True" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="#00000000"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="#00000000"/>
                    <Setter Property="BorderBrush" Value="#00000000"/>
                    <Setter Property="Foreground" Value="#FF1B1B1B"/>
                    <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>-->
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Padding" Value="3,2"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinHeight" Value="43" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" MinHeight="{TemplateBinding MinHeight}">
                                    <Border x:Name="Selection" Background="{StaticResource OrangeBrush}" Opacity="0"/>
                                    <ContentPresenter x:Name="contentPresenter" MinHeight="{TemplateBinding MinHeight}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" TargetName="Selection" Value="0.5"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Opacity" TargetName="Selection" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" TargetName="Selection" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.35"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0" Placement="Bottom">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                        <basecontrols:OmniTextBox x:Name="PART_EditableTextBox" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Text="{TemplateBinding SelectionBoxItem}" >
                            <basecontrols:OmniTextBox.Style>
                                <Style TargetType="{x:Type basecontrols:OmniTextBox}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <!--<Setter Property="Foreground" Value="{TemplateBinding Foreground}"/>-->
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush" Value="#7F5C5C5C"/>
                                    <Setter Property="SelectionBrush" Value="#FF0072C6"/>
                                    <Setter Property="CaretBrush" Value="{StaticResource OmniTextBoxForegroundBrush}" />
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="3,2"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type basecontrols:OmniTextBox}">
                                                <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                                                    <Border x:Name="FocusedState" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsReadOnly" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.75"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </basecontrols:OmniTextBox.Style>
                        </basecontrols:OmniTextBox>
                        <ToggleButton x:Name="DropDownButton" Focusable="False" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Width="0">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Background" Value="#00000000"/>
                                    <Setter Property="BorderBrush" Value="#00000000"/>
                                    <Setter Property="Foreground" Value="#00000000"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid x:Name="Root" Background="#00000000" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                        <Border x:Name="DefaultState" BorderThickness="0" Background="#FF3A3A3A"/>
                                                        <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="ChevronDownSolid" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                        <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid x:Name="FocusedState" Grid.ColumnSpan="2" Opacity="0">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False"/>
                            <!--<Setter Property="IsEnabled" TargetName="DropDownButton" Value="False"/>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="Root" SnapsToDevicePixels="True">
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="1" Placement="Bottom">
                                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                        <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="51*"/>
                                                        <ColumnDefinition Width="464*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.ColumnSpan="2" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <Grid x:Name="OmniTextBox" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Border x:Name="DefaultState" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                    <Border x:Name="FocusedState" Opacity="0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <ContentPresenter x:Name="content" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" 
                                                      IsHitTestVisible="False" 
                                                      Margin="5,3,23,3" 
                                                      VerticalAlignment="Center" 
                                                      />
                                </Grid>
                                <ToggleButton x:Name="DropDownButton" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="#00000000"/>
                                            <Setter Property="BorderBrush" Value="#00000000"/>
                                            <Setter Property="Foreground" Value="#00000000"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid x:Name="Root" Background="#00000000" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                                <Border x:Name="DefaultState" BorderThickness="0" Background="#FF3A3A3A" />
                                                                <Rectangle x:Name="Glyph" Width="20" Height="20" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                    <Rectangle.OpacityMask>
                                                                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_chevron_down}"/>
                                                                    </Rectangle.OpacityMask>
                                                                </Rectangle>
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                                <Setter Property="Fill" TargetName="Glyph" Value="#7F666666"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        -->
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="WhiteComboBoxStyle" BasedOn="{StaticResource CasyComboBoxStyle}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0" Placement="Bottom">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="1" Background="White">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                        <basecontrols:OmniTextBox x:Name="PART_EditableTextBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Text="{TemplateBinding SelectionBoxItem}" >
                            <basecontrols:OmniTextBox.Style>
                                <Style TargetType="{x:Type basecontrols:OmniTextBox}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
                                    <Setter Property="BorderBrush" Value="#7F5C5C5C"/>
                                    <Setter Property="SelectionBrush" Value="#FF0072C6"/>
                                    <Setter Property="FontSize" Value="19" />
                                    <Setter Property="FontWeight" Value="Regular" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="CaretBrush" Value="Black" />
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="3,2"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type basecontrols:OmniTextBox}">
                                                <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                    <Border x:Name="FocusedState" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsReadOnly" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.75"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </basecontrols:OmniTextBox.Style>
                        </basecontrols:OmniTextBox>
                        <ToggleButton Grid.Column="1" x:Name="DropDownButton" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
                                    <Setter Property="BorderBrush" Value="#00000000"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid x:Name="Root" Background="#00000000" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="30"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                        <Border x:Name="DefaultState" BorderThickness="0" Background="Transparent"/>
                                                        <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="16" Height="16" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="ChevronDownSolid" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                        <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid x:Name="FocusedState" Grid.ColumnSpan="2" Opacity="0">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False"/>
                            <Setter Property="IsEnabled" TargetName="DropDownButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="Root" SnapsToDevicePixels="True">
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="1" Placement="Bottom">
                                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                        <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="51*"/>
                                                        <ColumnDefinition Width="464*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.ColumnSpan="2" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <Grid x:Name="OmniTextBox" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Border x:Name="DefaultState" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent"/>
                                    <Border x:Name="FocusedState" Opacity="0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <ContentPresenter x:Name="content" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" 
                                                      IsHitTestVisible="False" 
                                                      Margin="5,3,23,3" 
                                                      VerticalAlignment="Center" 
                                                      />
                                </Grid>
                                <ToggleButton x:Name="DropDownButton" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="#00000000"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid x:Name="Root" Background="Transparent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                                <Border x:Name="DefaultState" BorderThickness="0" Background="White" />
                                                                <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="ChevronDownSolid" />
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                                <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="OrangeComboBoxStyle" BasedOn="{StaticResource CasyComboBoxStyle}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#FFF5A66B"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0" Placement="Bottom">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                        <basecontrols:OmniTextBox x:Name="PART_EditableTextBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Text="{TemplateBinding SelectionBoxItem}" >
                            <basecontrols:OmniTextBox.Style>
                                <Style TargetType="{x:Type basecontrols:OmniTextBox}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush" Value="#7F5C5C5C"/>
                                    <Setter Property="SelectionBrush" Value="#FF0072C6"/>
                                    <Setter Property="CaretBrush" Value="{StaticResource OmniTextBoxForegroundBrush}" />
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="3,2"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type basecontrols:OmniTextBox}">
                                                <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                    <Border x:Name="FocusedState" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsReadOnly" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.75"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </basecontrols:OmniTextBox.Style>
                        </basecontrols:OmniTextBox>
                        <ToggleButton x:Name="DropDownButton" Focusable="False" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
                                    <Setter Property="BorderBrush" Value="#00000000"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid x:Name="Root" Background="#00000000" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                        <Border x:Name="DefaultState" BorderThickness="0" Background="White"/>
                                                        <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="{StaticResource OrangeBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="ChevronDownSolid" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                        <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid x:Name="FocusedState" Grid.ColumnSpan="2" Opacity="0">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False"/>
                            <Setter Property="IsEnabled" TargetName="DropDownButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="Root" SnapsToDevicePixels="True">
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="1" Placement="Bottom">
                                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                                        <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="51*"/>
                                                        <ColumnDefinition Width="464*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.ColumnSpan="2" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <Grid x:Name="OmniTextBox" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Border x:Name="DefaultState" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                    <Border x:Name="FocusedState" Opacity="0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <ContentPresenter x:Name="content" 
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" 
                                                      IsHitTestVisible="False" 
                                                      Margin="5,3,23,3" 
                                                      VerticalAlignment="Center" 
                                                      />
                                </Grid>
                                <ToggleButton x:Name="DropDownButton" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
                                            <Setter Property="BorderBrush" Value="#00000000"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid x:Name="Root" Background="#00000000" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                                <Border x:Name="DefaultState" BorderThickness="0" Background="White" />
                                                                <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="{StaticResource OrangeBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="ChevronDownSolid" />
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                                <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type basecontrols:OmniTextBox}" x:Key="OrangeOmniTextBoxStyle" BasedOn="{StaticResource CasyOmniTextBoxStyle}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#FFF5A66B"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="DilutionFactorComboBoxStyle" BasedOn="{StaticResource CasyComboBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0" Placement="Bottom">
                            <Grid>
                                <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White" Padding="4">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="43" />
                                            <RowDefinition Height="43" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="2" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Style="{StaticResource CasyTextBlockStyle}" Text="DilutionFactor_Popup_SampleVolume" localization:Localization.IsLocalized="True" FontSize="21" Foreground="Black" VerticalAlignment="Center"/>
                                        <TextBlock Grid.Row="2" Text="DilutionFactor_Popup_CASYtonVolume" localization:Localization.IsLocalized="True"  FontSize="21" Foreground="Black" VerticalAlignment="Center" />

                                        <basecontrols:OmniTextBox Style="{StaticResource CasyOmniTextBoxStyle}" Background="White" Foreground="Black" Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding Path=DilutionSampleVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                        <basecontrols:OmniTextBox Style="{StaticResource CasyOmniTextBoxStyle}" Background="White" Foreground="Black" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding Path=DilutionCasyTonVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                        <basecontrols:OmniTextBox x:Name="PART_EditableTextBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Text="{TemplateBinding SelectionBoxItem}">
                            <basecontrols:OmniTextBox.Style>
                                <Style TargetType="{x:Type basecontrols:OmniTextBox}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush" Value="#7F5C5C5C"/>
                                    <Setter Property="SelectionBrush" Value="#FF0072C6"/>
                                    <Setter Property="CaretBrush" Value="{StaticResource OmniTextBoxForegroundBrush}" />
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="3,2"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type basecontrols:OmniTextBox}">
                                                <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                    <Border x:Name="FocusedState" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsReadOnly" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.75"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </basecontrols:OmniTextBox.Style>
                        </basecontrols:OmniTextBox>
                        <ToggleButton x:Name="DropDownButton" Focusable="False" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Background" Value="#00000000"/>
                                    <Setter Property="BorderBrush" Value="#00000000"/>
                                    <Setter Property="Foreground" Value="#00000000"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid x:Name="Root" Background="#00000000" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                        <Border x:Name="DefaultState" BorderThickness="0" Background="#FF3A3A3A"/>
                                                        <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="QuestionSolid" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                        <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid x:Name="FocusedState" Grid.ColumnSpan="2" Opacity="0">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False"/>
                            <Setter Property="IsEnabled" TargetName="DropDownButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="OrangeDilutionFactorComboBoxStyle" BasedOn="{StaticResource CasyComboBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0" Placement="Bottom">
                            <Grid>
                                <Border x:Name="DropDownBorder" BorderBrush="#FFACACAC" BorderThickness="0" Background="White" Padding="4">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="43" />
                                            <RowDefinition Height="43" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="2" />
                                            <ColumnDefinition Width="80" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Style="{StaticResource CasyTextBlockStyle}" Text="DilutionFactor_Popup_SampleVolume" localization:Localization.IsLocalized="True" FontSize="21" Foreground="Black" VerticalAlignment="Center"/>
                                        <TextBlock Grid.Row="2" Text="DilutionFactor_Popup_CASYtonVolume" localization:Localization.IsLocalized="True"  FontSize="21" Foreground="Black" VerticalAlignment="Center" />

                                        <basecontrols:OmniTextBox Style="{StaticResource CasyOmniTextBoxStyle}" Background="White" Foreground="Black" Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding Path=DilutionSampleVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                        <basecontrols:OmniTextBox Style="{StaticResource CasyOmniTextBoxStyle}" Background="White" Foreground="Black" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding Path=DilutionCasyTonVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                        <basecontrols:OmniTextBox x:Name="PART_EditableTextBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Text="{TemplateBinding SelectionBoxItem}">
                            <basecontrols:OmniTextBox.Style>
                                <Style TargetType="{x:Type basecontrols:OmniTextBox}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Foreground" Value="{StaticResource OmniTextBoxForegroundBrush}"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="BorderBrush" Value="#7F5C5C5C"/>
                                    <Setter Property="SelectionBrush" Value="#FF0072C6"/>
                                    <Setter Property="CaretBrush" Value="{StaticResource OmniTextBoxForegroundBrush}" />
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Padding" Value="3,2"/>
                                    <Setter Property="AllowDrop" Value="True"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type basecontrols:OmniTextBox}">
                                                <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                    <Border x:Name="FocusedState" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                                                <Setter Property="BorderThickness" Value="1"/>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsReadOnly" Value="True">
                                                        <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.75"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </basecontrols:OmniTextBox.Style>
                        </basecontrols:OmniTextBox>
                        <ToggleButton x:Name="DropDownButton" Focusable="False" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Background" Value="#00000000"/>
                                    <Setter Property="BorderBrush" Value="#00000000"/>
                                    <Setter Property="Foreground" Value="#00000000"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid x:Name="Root" Background="#00000000" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="40"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid x:Name="States" Grid.Column="1" MinHeight="18">
                                                        <Border x:Name="DefaultState" BorderThickness="0" Background="White"/>
                                                        <iconPacks:PackIconFontAwesome x:Name="Glyph" Width="20" Height="20" Foreground="{StaticResource OrangeBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Kind="QuestionSolid" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                                                        <Setter Property="Foreground" TargetName="Glyph" Value="#7F666666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="#FF3C3C3C"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid x:Name="FocusedState" Grid.ColumnSpan="2" Opacity="0">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#FF0072C6"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False"/>
                            <Setter Property="IsEnabled" TargetName="DropDownButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="FocusedState" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CasyRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0,3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Root" Background="#00000000" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="Grid1" Grid.ColumnSpan="1" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="28" Margin="0,4" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="28">
                                <Border x:Name="DefaultState" BorderBrush="White" BorderThickness="1" Background="{StaticResource WhiteBrush}" CornerRadius="512"/>
                                <Border x:Name="RadioButtonIcon" Background="{StaticResource OrangeBrush}" CornerRadius="64" Margin="4" Opacity="0"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" Grid.ColumnSpan="1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="RadioButtonIcon" Value="1"/>
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dxg:GridColumnHeader}">
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="MinHeight" Value="40" />
    </Style>

    <!--
    BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}"
    -->
    <Style TargetType="{x:Type dxg:LightweightCellEditor}">
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="MinHeight" Value="40" />
    </Style>

    <!--
    <Style TargetType="{x:Type dxg:RowControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="{StaticResource OrangeTransparentBrush}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    -->

    <!--
    <Style TargetType="dxe:ComboBoxEdit"
               xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
               xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys">
        <Style.Resources>
            <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="{dxet:ButtonsThemeKey ResourceKey=ButtonTemplate, IsThemeIndependent=True}">
                <Grid x:Name="Root">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="#FFBBBBBB" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="Gray" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.75" />
                                    <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="0.25" />
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="PART_Background"
                                                        Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                        To="Gray" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="40" SharedSizeGroup="ComboBoxButton" />
                    </Grid.ColumnDefinitions>

                    <Border x:Name="PART_Background" Background="LightGray" BorderThickness="1,0,0,0" />
                    <Rectangle x:Name="Glyph" Width="20" Height="20" Fill="Black" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_chevron_down}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Grid>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="BorderTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid x:Name="Grid1" MinWidth="0" MinHeight="0">
                        <Border CornerRadius="2" ClipToBounds="True" Margin="1">
                            <ContentPresenter />
                        </Border>
                        <Border x:Name="Border" BorderBrush="Black" BorderThickness="1" CornerRadius="2" IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.35">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="30" MinHeight="30" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ToggleButton.FocusVisualStyle>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border>
                                                        <Rectangle SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.FocusVisualStyle>
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="#00000000" SnapsToDevicePixels="False">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition x:Name="ColumnDefinition1" Width="30"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Path x:Name="GlyphClose" Data="F1M1,2L1,4 4,7 7,4 7,2 4,5 1,2z" Fill="#FF666666" Height="6" Stretch="Fill" Width="7"/>
                                                            <Path x:Name="GlyphOpen" Data="F1M1,7L1,5 4,2 7,5 7,7 4,4 1,7z" Fill="#FF666666" Height="6" Stretch="Fill" Visibility="Collapsed" Width="7"/>
                                                            <ContentPresenter x:Name="ContentPresenter1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Visibility" TargetName="GlyphOpen" Value="Visible"/>
                                                            <Setter Property="Visibility" TargetName="GlyphClose" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="44"/>
                                                            <Setter Property="Margin" TargetName="ContentPresenter1" Value="12,0,0,0"/>
                                                            <Setter Property="Width" TargetName="GlyphClose" Value="14"/>
                                                            <Setter Property="Height" TargetName="GlyphClose" Value="12"/>
                                                            <Setter Property="Height" TargetName="GlyphOpen" Value="12"/>
                                                            <Setter Property="Width" TargetName="GlyphOpen" Value="14"/>
                                                            <Setter Property="Data" TargetName="GlyphClose" Value="F1M0,2.86102E-06L3.06162E-16,5 7,12 14,5 14,2.86102E-06 7,7 0,2.86102E-06z"/>
                                                            <Setter Property="Data" TargetName="GlyphOpen" Value="F1M0,12L3.06162E-16,7 7,9.53674E-07 14,7 14,12 7,5 0,12z"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="#00000000" SnapsToDevicePixels="False">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition x:Name="RowDefinition1" Height="30"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Path x:Name="GlyphClose" Data="F1M1.5,1.5L3.5,1.5 6.5,4.5 3.5,7.5 1.5,7.5 4.5,4.5 1.5,1.5z" Fill="{TemplateBinding Foreground}" Height="14" Stretch="Fill" Width="12"/>
                                                            <Path x:Name="GlyphOpen" Data="F1M6.5013,1.5L4.5013,1.5 1.5013,4.5 4.5013,7.5 6.5013,7.5 3.5013,4.5 6.5013,1.5z" Fill="{TemplateBinding Foreground}" Height="14" Stretch="Fill" Visibility="Collapsed" Width="12"/>
                                                            <ContentPresenter x:Name="ContentPresenter1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Visibility" TargetName="GlyphOpen" Value="Visible"/>
                                                            <Setter Property="Visibility" TargetName="GlyphClose" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                            <Setter Property="Height" TargetName="RowDefinition1" Value="44"/>
                                                            <Setter Property="Margin" TargetName="ContentPresenter1" Value="0,12,0,0"/>
                                                            <Setter Property="Width" TargetName="GlyphClose" Value="12"/>
                                                            <Setter Property="Height" TargetName="GlyphClose" Value="14"/>
                                                            <Setter Property="Height" TargetName="GlyphOpen" Value="14"/>
                                                            <Setter Property="Width" TargetName="GlyphOpen" Value="12"/>
                                                            <Setter Property="Data" TargetName="GlyphOpen" Value="F1M12,9.53674E-07L7,9.53674E-07 1.43051E-06,7 7,14 12,14 5,7 12,9.53674E-07z"/>
                                                            <Setter Property="Data" TargetName="GlyphClose" Value="F1M0.0018425,2.86102E-06L5.00184,2.86102E-06 12.0018,7 5.00184,14 0.0018425,14 7.00184,7 0.0018425,2.86102E-06z"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="#00000000" SnapsToDevicePixels="False">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition x:Name="ColumnDefinition1" Width="30"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Path x:Name="GlyphClose" Data="F1M1,7L1,5 4,2 7,5 7,7 4,4 1,7z" Fill="#FF666666" Height="6" Stretch="Fill" Width="7"/>
                                                            <Path x:Name="GlyphOpen" Data="F1M1,2L1,4 4,7 7,4 7,2 4,5 1,2z" Fill="#FF666666" Height="6" Stretch="Fill" Visibility="Collapsed" Width="7"/>
                                                            <ContentPresenter x:Name="ContentPresenter1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Visibility" TargetName="GlyphOpen" Value="Visible"/>
                                                            <Setter Property="Visibility" TargetName="GlyphClose" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="44"/>
                                                            <Setter Property="Margin" TargetName="ContentPresenter1" Value="12,0,0,0"/>
                                                            <Setter Property="Width" TargetName="GlyphClose" Value="14"/>
                                                            <Setter Property="Height" TargetName="GlyphClose" Value="12"/>
                                                            <Setter Property="Width" TargetName="GlyphOpen" Value="14"/>
                                                            <Setter Property="Height" TargetName="GlyphOpen" Value="12"/>
                                                            <Setter Property="Data" TargetName="GlyphOpen" Value="F1M0,2.86102E-06L3.06162E-16,5 7,12 14,5 14,2.86102E-06 7,7 0,2.86102E-06z"/>
                                                            <Setter Property="Data" TargetName="GlyphClose" Value="F1M0,12L3.06162E-16,7 7,9.53674E-07 14,7 14,12 7,5 0,12z"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="#00000000" SnapsToDevicePixels="False">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition x:Name="RowDefinition1" Height="30"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Path x:Name="GlyphClose" Data="F1M6.5013,1.5L4.5013,1.5 1.5013,4.5 4.5013,7.5 6.5013,7.5 3.5013,4.5 6.5013,1.5z" Fill="#FF666666" Height="7" Stretch="Fill" Width="6"/>
                                                            <Path x:Name="GlyphOpen" Data="F1M1.5,1.5L3.5,1.5 6.5,4.5 3.5,7.5 1.5,7.5 4.5,4.5 1.5,1.5z" Fill="#FF666666" Height="7" Stretch="Fill" Visibility="Collapsed" Width="6"/>
                                                            <ContentPresenter x:Name="ContentPresenter1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Visibility" TargetName="GlyphOpen" Value="Visible"/>
                                                            <Setter Property="Visibility" TargetName="GlyphClose" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Fill" TargetName="GlyphClose" Value="#FF0072C6"/>
                                                            <Setter Property="Fill" TargetName="GlyphOpen" Value="#FF0072C6"/>
                                                        </Trigger>
                                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                            <Setter Property="Height" TargetName="RowDefinition1" Value="44"/>
                                                            <Setter Property="Margin" TargetName="ContentPresenter1" Value="0,12,0,0"/>
                                                            <Setter Property="Width" TargetName="GlyphClose" Value="12"/>
                                                            <Setter Property="Height" TargetName="GlyphClose" Value="14"/>
                                                            <Setter Property="Height" TargetName="GlyphOpen" Value="14"/>
                                                            <Setter Property="Width" TargetName="GlyphOpen" Value="12"/>
                                                            <Setter Property="Data" TargetName="GlyphClose" Value="F1M12,9.53674E-07L7,9.53674E-07 1.43051E-06,7 7,14 12,14 5,7 12,9.53674E-07z"/>
                                                            <Setter Property="Data" TargetName="GlyphOpen" Value="F1M0.0018425,2.86102E-06L5.00184,2.86102E-06 12.0018,7 5.00184,14 0.0018425,14 7.00184,7 0.0018425,2.86102E-06z"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CasyCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FF313131"/>
        <Setter Property="BorderBrush" Value="#7F2C2C2C"/>
        <Setter Property="Foreground" Value="#FFE6E6E6" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0,3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="Root" Background="#00000000" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateState">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--  -->
                            <Grid x:Name="States" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="30" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="60">
                                <Border x:Name="DefaultState" BorderBrush="{TemplateBinding Background}" BorderThickness="2" Background="{TemplateBinding Background}" Opacity="1"/>
                                <Border x:Name="PressedState" BorderBrush="#FF94C025" BorderThickness="2" Background="#FF94C025" Opacity="0"/>
                                <Border x:Name="CheckIcon" BorderThickness="2" Background="#FF3E3E3E" BorderBrush="Transparent" Width="30" HorizontalAlignment="Left" />
                                <Label x:Name="OnLabel" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="ON" Foreground="{TemplateBinding Foreground}" Opacity="0" FontSize="12"/>
                                <Label x:Name="OffLabel" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Right" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="OFF" Foreground="{TemplateBinding Foreground}" Opacity="1" FontSize="12"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" Grid.ColumnSpan="1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                            <Setter Property="Opacity" TargetName="PressedState" Value="1"/>
                            <Setter Property="HorizontalAlignment" TargetName="CheckIcon" Value="Right" />
                            <Setter Property="Opacity" TargetName="OnLabel" Value="1" />
                            <Setter Property="Opacity" TargetName="OffLabel" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CasyOrangeCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
        <Setter Property="BorderBrush" Value="#7F2C2C2C"/>
        <Setter Property="FontFamily" Value="pack://application:,,,/OLS.Casy.Ui.Base;component/Resources/#Dosis" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0,3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="Root" Background="#00000000" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateState">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--  -->
                            <Grid x:Name="States" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="30" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="60">
                                <Border x:Name="DefaultState" BorderBrush="{TemplateBinding Background}" BorderThickness="2" Background="{TemplateBinding Background}" Opacity="1"/>
                                <Border x:Name="PressedState" BorderBrush="#FF94C025" BorderThickness="2" Background="#FF94C025" Opacity="0"/>
                                <Border x:Name="CheckIcon" BorderThickness="2" Background="White" BorderBrush="Transparent" Width="30" HorizontalAlignment="Left" />
                                <Label x:Name="OnLabel" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="ON" Foreground="{TemplateBinding Foreground}" Opacity="0" FontSize="12"/>
                                <Label x:Name="OffLabel" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Right" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="OFF" Foreground="{TemplateBinding Foreground}" Opacity="1" FontSize="12"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" Grid.ColumnSpan="1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="DefaultState" Value="0"/>
                            <Setter Property="Opacity" TargetName="PressedState" Value="1"/>
                            <Setter Property="HorizontalAlignment" TargetName="CheckIcon" Value="Right" />
                            <Setter Property="Opacity" TargetName="OnLabel" Value="1" />
                            <Setter Property="Opacity" TargetName="OffLabel" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CasyCircleButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="PanningMode" Value="Both" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                            HorizontalAlignment="Right"
                            Opacity="0.5" 
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal"
                            Opacity="0.5"
                            Grid.Row="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExperimentColumnComboBoxStyle" TargetType="{x:Type dxe:ComboBoxEditSettings}">
        <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxg:GridRow}}, Path=DataContext.KnownExperiments}"/>
        <!--<Setter Property="ItemsSource" Value="{Binding KnownExperiments}"/>-->
        <Setter Property="IsTextEditable" Value="True"/>
        <Setter Property="ApplyItemTemplateToSelectedItem" Value="True"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid MinHeight="40">
                        <TextBlock Style="{StaticResource CasyTextBlockStyle}" Margin="4,0,0,0" Text="{Binding}" VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExperimentColumnStyle" TargetType="{x:Type dxg:ColumnBase}">
        <Setter Property="CellTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ComboBox Style="{StaticResource WhiteComboBoxStyle}" 
                              ItemsSource="{Binding Path=RowData.Row.KnownExperiments}"
                              IsEditable="True"
                              IsTextSearchEnabled="True"
                              IsTextSearchCaseSensitive="False"
                              StaysOpenOnEdit="True"
                              Text="{Binding Path=RowData.Row.Experiment, Mode=TwoWay, ValidatesOnNotifyDataErrors=True}"
                              auth:Authorization.MinRequiredRole="Operator"
                              />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!--
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxe:ComboBoxEditSettings Style="{StaticResource ExperimentColumnComboBoxStyle}"/>
            </Setter.Value>
        </Setter>
        -->
    </Style>

    <Style x:Key="GroupColumnComboBoxStyle" TargetType="{x:Type dxe:ComboBoxEditSettings}">
        <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxg:GridRow}}, Path=DataContext.KnownGroups}"/>
        <!--<Setter Property="ItemsSource" Value="{Binding KnownGroups}"/>-->
        <Setter Property="IsTextEditable" Value="True"/>
        <Setter Property="ApplyItemTemplateToSelectedItem" Value="True"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid MinHeight="40">
                        <TextBlock Style="{StaticResource CasyTextBlockStyle}" Margin="4,0,0,0" Text="{Binding}" VerticalAlignment="Center" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupColumnStyle" TargetType="{x:Type dxg:ColumnBase}">
        <Setter Property="CellTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ComboBox Style="{StaticResource WhiteComboBoxStyle}" 
                              ItemsSource="{Binding Path=RowData.Row.KnownGroups}"
                              IsEditable="True"
                              IsTextSearchEnabled="True"
                              IsTextSearchCaseSensitive="True"
                              StaysOpenOnEdit="True"
                              Text="{Binding Path=RowData.Row.Group, Mode=TwoWay, ValidatesOnNotifyDataErrors=True}"
                              auth:Authorization.MinRequiredRole="Operator" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        
        <!--
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxe:ComboBoxEditSettings Style="{StaticResource GroupColumnComboBoxStyle}"/>
            </Setter.Value>
        </Setter>
        -->
    </Style>

    <Style TargetType="basecontrols:OmniPopupColorEdit">
        <Setter Property="ChipSize" Value="Large"/>
        <Setter Property="ChipMargin" Value="5"/>
    </Style>
</ResourceDictionary>